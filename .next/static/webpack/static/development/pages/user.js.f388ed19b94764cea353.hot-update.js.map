{"version":3,"file":"static/webpack/static/development/pages/user.js.f388ed19b94764cea353.hot-update.js","sources":["webpack:///./pages/user.js"],"sourcesContent":["import React, { Component } from 'react';\nimport GhPolyglot from 'gh-polyglot';\nimport Chart from 'chart.js';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.main`\n  padding: 50px 100px;\n  img {\n    max-width: 200px;\n  }\n  .chart {\n    max-width: 500px;\n  }\n`;\n\nclass User extends Component {\n  state = {\n    username: '',\n    user: {},\n    userLanguages: [],\n    chartType: 'bar',\n  };\n\n  componentDidMount() {\n    this.setState({ username: this.props.query.id });\n    const username = this.props.query.id;\n\n    // fetch(`https://api.github.com/users/${username}`)\n    //   .then(response => response.json())\n    //   .then(json => {\n    //     console.log(json);\n    //     setUser(json);\n    //   });\n    this.setState({\n      user: {\n        login: 'bchiang7',\n        id: 6599979,\n        node_id: 'MDQ6VXNlcjY1OTk5Nzk=',\n        avatar_url: 'https://avatars2.githubusercontent.com/u/6599979?v=4',\n        gravatar_id: '',\n        url: 'https://api.github.com/users/bchiang7',\n        html_url: 'https://github.com/bchiang7',\n        followers_url: 'https://api.github.com/users/bchiang7/followers',\n        following_url: 'https://api.github.com/users/bchiang7/following{/other_user}',\n        gists_url: 'https://api.github.com/users/bchiang7/gists{/gist_id}',\n        starred_url: 'https://api.github.com/users/bchiang7/starred{/owner}{/repo}',\n        subscriptions_url: 'https://api.github.com/users/bchiang7/subscriptions',\n        organizations_url: 'https://api.github.com/users/bchiang7/orgs',\n        repos_url: 'https://api.github.com/users/bchiang7/repos',\n        events_url: 'https://api.github.com/users/bchiang7/events{/privacy}',\n        received_events_url: 'https://api.github.com/users/bchiang7/received_events',\n        type: 'User',\n        site_admin: false,\n        name: 'Brittany Chiang',\n        company: '@Upstatement ',\n        blog: 'https://brittanychiang.com',\n        location: 'Boston, MA',\n        email: null,\n        hireable: true,\n        bio: null,\n        public_repos: 53,\n        public_gists: 4,\n        followers: 248,\n        following: 12,\n        created_at: '2014-02-05T23:22:59Z',\n        updated_at: '2019-04-17T03:18:31Z',\n      },\n    });\n\n    // const me = new GhPolyglot(`${username}`);\n    // me.userStats((err, stats) => {\n    //   if (err) {\n    //     throw new Error(err);\n    //   }\n\n    //   this.setState({ userLanguages: stats }, () => this.buildChart());\n    // });\n    this.buildChart();\n  }\n\n  buildChart = () => {\n    const { userLanguages, chartType } = this.state;\n    console.log(userLanguages);\n    const ctx = document.getElementById('langChart');\n\n    const myChart = new Chart(ctx, {\n      type: chartType,\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [\n          {\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n              'rgba(75, 192, 192, 0.2)',\n              'rgba(153, 102, 255, 0.2)',\n              'rgba(255, 159, 64, 0.2)',\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n  };\n\n  changeChartType = () => {\n    console.log('hi');\n    this.setState({ chartType: 'pie' }, () => this.buildChart());\n  };\n\n  render() {\n    const { username, user } = this.state;\n\n    return (\n      <StyledContainer>\n        <h1>\n          <a href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {username}\n          </a>\n        </h1>\n        <h2>{user.name}</h2>\n        <h3>{user.company}</h3>\n        <p>{user.blog}</p>\n        <p>{user.location}</p>\n        <p>{user.email}</p>\n        <p>{user.hireable ? 'Hireable' : 'Not Available'}</p>\n        <p>{user.bio}</p>\n        <p>Repos: {user.public_repos}</p>\n        <p>Followers: {user.followers}</p>\n        <p>Following: {user.following}</p>\n        <p>\n          Member since &nbsp;\n          {new Date(user.created_at).toLocaleDateString('en-US', {\n            month: 'short',\n            year: 'numeric',\n          })}\n        </p>\n\n        <img src={user.avatar_url} alt=\"\" />\n\n        <button onClick={this.changeChartType('bar')}>Bar</button>\n        <button onClick={this.changeChartType('pie')}>Pie</button>\n        <button onClick={this.changeChartType('donut')}>Donut</button>\n        <button onClick={this.changeChartType('polarArea')}>Area</button>\n\n        <canvas id=\"langChart\" className=\"chart\" width=\"400\" height=\"400\" />\n      </StyledContainer>\n    );\n  }\n}\n\nUser.propTypes = {\n  query: PropTypes.object,\n};\n\nexport default User;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AASA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AA+DA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAQA;AAnBA;AAHA;AA0BA;AACA;AACA;AAEA;AACA;AADA;AADA;AAFA;AADA;AA5BA;AAwCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AA5GA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AADA;AAqCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;;;AAsDA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3JA;AACA;AA6JA;AACA;AADA;AAIA;;;;A","sourceRoot":""}